---
# tasks file for docker_launch
- name: Docker installation and configuration
  become: true  # Применяется к всему блоку задач, выполняется с повышенными привилегиями
  block:
    - name: Set docker_required_packages based on group
      set_fact:
        docker_required_packages: "{{ common_packages + docker_required_packages[ansible_group] }}"
      vars:
        ansible_group: "{{ 'web' if 'web' in group_names else 'db' }}"  # Определение группы текущего хоста

    - name: Install required packages
      apt:
        name: "{{ item }}"  # Имя пакета для установки
        state: present  # Убедиться, что пакет установлен
      loop: "{{ docker_required_packages }}"  # Список пакетов для установки

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
        state: present

    - name: Install Docker
      apt:
        name: docker-ce  # Используем официальный пакет Docker
        state: present  # Убедиться, что Docker установлен

    - name: Install containerd
      apt:
        name: containerd.io  # Установка containerd, если требуется
        state: present

    - name: Enable Docker service
      systemd:
        name: docker  # Имя сервиса Docker
        enabled: true  # Включить автозапуск
        state: started  # Убедиться, что сервис запущен

    - name: Reboot server if needed
      reboot:
        msg: "Reboot initiated by Ansible for Docker installation"  # Сообщение при перезагрузке
        connect_timeout: 5  # Таймаут подключения
        reboot_timeout: 600  # Таймаут перезагрузки
      when: ansible_facts['os_family'] == 'Debian' and docker_reboot_required | default(True)  # Условие перезагрузки

    - name: Add users to the docker group
      user:
        name: "{{ item }}"  # Имя пользователя для добавления
        groups: docker  # Группа, к которой добавляется пользователь
        append: true  # Добавить пользователя в указанную группу
      loop: "{{ docker_users }}"  # Список пользователей для добавления

    - name: Download Docker Compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"  # URL для загрузки Docker Compose
        dest: /usr/local/bin/docker-compose  # Путь для сохранения бинарника
        mode: '0755'  # Права доступа к бинарнику

  rescue:
    - name: Handle errors in Docker installation block
      debug:
        msg: "An error occurred during Docker installation."  # Сообщение об ошибке

  always:
    - name: Ensure docker-compose command is available for users
      shell: "docker-compose --version"  # Команда для проверки наличия docker-compose
      become: false  # Выполняется без повышения привилегий

